-------------------------------------------------------------------------------
-- The following program solves the 8 queens problem.
--
-- General Idea.
-- We must place one queen in each row.
-- At each NuSMV step, we place one queen in one row,
--   starting with row 1 and ending with row 8.
-- A queen can be placed only if it is not under attack.
-- With this solution, every path of length 8 is a solution to the problem.
--
-- Idea of the implementation.
-- A queen is under attack if it is placed in the same diagonal as another one.
-- Queens in the same diagonal have the same value (row + col) or (row - col).
-- 
-- Hint: use bounded model checking to find *one* solution to the problem.
--
-------------------------------------------------------------------------------

MODULE main

VAR
-- the number of queens placed on the board
  N : 0..8;

-- for each row 1..8, we store the column 1..8 in which a queen is placed
-- Value 0 is used to initialise the variables.
  col           : array 1..8 of 0..8;

ASSIGN
-- at each step we place one queen
-- N=1 is the initial step and at the next step a queen will be placed in row 2, and so on
-- when we have finished, we set N to zero

  init(N) := 1;
  next(N) := case
    N < 8 : N+1;
    1     : 0;
  esac;

  init(col[1]) := {1,2,3,4,5,6,7,8}; 
  init(col[2]) := 0;
  init(col[3]) := 0;
  init(col[4]) := 0;
  init(col[5]) := 0;
  init(col[6]) := 0;
  init(col[7]) := 0;
  init(col[8]) := 0;

-- once a queen has been placed, it cannot be moved

  next(col[1]) := col[1];

  next(col[2]) := ??

  next(col[3]) := ??

  next(col[4]) := ??

  next(col[5]) := ??

  next(col[6]) := ??

  next(col[7]) := ??

  next(col[8]) := ??


-- Transitions must repect the following constraints.
-- 1. At each step, we cannot place a queen in the same column as a  previous one;
-- 2. At each step, we cannot place a queen if it has the same value
--    (row + col) as a previous one (otherwise it would be under attack)
-- 3. At each step, we cannot place a queen if it has the same value
--    (row - col) as a previous one (otherwise it would be under attack)


-- VERIFICATION FORMULAS
-- a spec to find a solution to the problem both in LTL and CTL